# Azure DevOps YAML Pipeline from Bow Data Toolkits

trigger:
    branches:
        include:
            - "*"


parameters:
  - name: workingDirectory
    default: $(Build.SourcesDirectory)
  - name: preRelease
    default: "a"
  - name: azdoAgentPool
    type: object
    default:
      vmImage: "ubuntu-latest"
  - name: azureTestStageName
    default: AzureTestStage
  - name: azureTestStageDisplayName
    default: 'Azure Test Stage'
  - name: azureTestStageDependsOn
    type: object
    default: []
  - name: azureTestStageCondition
    default: succeeded()
  - name: azureTestStageVariables
    type: object
    default: {}


stages:
  - stage: ${{parameters.azureTestStageName}}
    displayName: ${{parameters.azureTestStageDisplayName}}
    dependsOn: ${{parameters.azureTestStageDependsOn}}
    condition: ${{parameters.azureTestStageCondition}}
    variables:
      ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(AZURE_TENANT_ID)
      ARM_CLIENT_ID: $(SPA_APP_ID)
      ARM_CLIENT_SECRET: $(SPA_PASSWORD)
      ${{ each pair in parameters.azureTestStageVariables }}:
        ${{pair.key}}: ${{pair.value}}
    jobs:
      - job: AzureContainerInstancesTestJob
        pool: ${{parameters.azdoAgentPool}}
        condition: succeeded()
        displayName: "ACI Test Job"
        dependsOn: []
        variables: {}
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'

          - checkout: self
            displayName: 'Checkout repository'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              command: 'init'
              provider: 'azurerm'
              workingDirectory: '${{parameters.workingDirectory}}/modules/azure-container-instances'
              ensureBackend: true
              backendServiceArm: "terraform-agent"
              backendAzureRmResourceGroupName: 'neo4j-sandbox'
              backendAzureRmStorageAccountName: 'terraform987654321'
              backendAzureRmContainerName: 'terraform-state-files'
              backendAzureRmKey: 'state.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              command: 'validate'
              workingDirectory: '${{parameters.workingDirectory}}/modules/azure-container-instances'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '${{parameters.workingDirectory}}/modules/azure-container-instances'
              environmentServiceNameAzureRM: "terraform-agent"
              commandOptions: '-out=.tfplan -var="tcp_ports=[7474, 7687]" -var="image=neo4j"'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '${{parameters.workingDirectory}}/modules/azure-container-instances'
              environmentServiceNameAzureRM: "terraform-agent"
              commandOptions: '-auto-approve -input=false .tfplan'
